#include<stdio.h>

class test
{
public:
    int a;
    void f1(void)
    {
        printf("%d\n",a);
    }
    void f2(void)
    {
        a=2;//省略了self
        f1();//省略了self
    }

};



int main(void)
{
    test t;
    t.a=1;
    t.f1();
    return 0;
}




/*
只有人类才会出现名字重复，编译器不会，我相信编译器把所有名字唯一编码化了（在小本本上），所以编译器是绝对不会搞混的
关键是怕程序员搞混，同样一段代码的一处函数调用，张三说是调用的那个函数，李四说是调用的那个函数，你说让编译器咋搞，编译器到底调用哪个函数。
所以必须要一套标准，张三熟悉机制后告诉李四，你说的是错的，你说的不符合这个标准，我说的符合这个标准，我对的，这样编译器也就不头疼了，他也按照标准去执行就好，所以关键在于给编译明确怎么搞
当然，你也可以深究编译器到底怎么搞的，本例中，关键要搞清楚C++是怎样结构成C的。

*/